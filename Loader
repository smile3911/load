local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "LunarWare", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

--[[
Name = <LunarWare> - The name of the UI.
HidePremium = <bool> - Whether or not the user details shows Premium status or not.
SaveConfig = <false> - Toggles the config saving in the UI.
ConfigFolder = <string> - The name of the folder where the configs are saved.
IntroEnabled = <false> - Whether or not to show the intro animation.
IntroText = <LunarWare> - Text to show in the intro animation.
IntroIcon = <string> - URL to the image you want to use in the intro animation.
Icon = <string> - URL to the image you want displayed on the window.
CloseCallback = <function> - Function to execute when the window is closed.
]]

local LockTab = Window:MakeTab({
	Name = "Locks",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <Locks> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

local ToolSection = LockTab:AddSection({
	Name = "lock+Q tool"
})

--[[
Name = <lock+Q tool> - The name of the section.
]]

LockTab:AddButton({
	Name = "Q tool",
	Callback = function()
      		local k="Q"local t=Instance.new("Tool")t.RequiresHandle=false t.Name=k t.TextureId="http://www.roblox.com/asset/?id=607405653"local function m()t.Parent=game.Players.LocalPlayer.Backpack print("Tool moved to your Roblox inventory.")end if not game.Players.LocalPlayer.Backpack:FindFirstChild(t.Name)then m()end local b=false local function a()if not b then b=true local v=game:GetService("VirtualInputManager")v:SendKeyEvent(true,k,false,game)wait(0.2)b=false end end t.Activated:Connect(a)game.Players.LocalPlayer.CharacterAdded:Connect(function()if not game.Players.LocalPlayer.Backpack:FindFirstChild(t.Name)then m()end end)print("Tool bound to key '"..k.."' and is in your inventory.")local AkaliNotif=loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))()local Notify=AkaliNotif.Notify Notify({Description="Made by J3do",Title="Notification",Duration=5})
      	end    
})

--[[
Name = <Q Tool> - The name of the button.
Callback = <are u dumb enough to> - The function of the button.
]]

LockTab:AddButton({
	Name = "LunarWare Lock",
	Callback = function()
      		-- Skidded
local Enabled = true
local Prediction = 0.1398
local Notifications = true
local AimPart = "HumanoidRootPart"


local Tool = Instance.new("Tool")
Tool.RequiresHandle = false
Tool.Name = "uz"


local Camera = game:GetService("Workspace").CurrentCamera
local Mouse = game.Players.LocalPlayer:GetMouse()
local Plr

local Part = Instance.new("Part", game.Workspace)

Part.Anchored = true
Part.CanCollide = false
Part.Color = Color3.fromRGB(255,0,0)
Part.Material = Enum.Material.Neon
Part.Size = Vector3.new(0.93, 0.93, 0.93)
Part.Shape = Enum.PartType.Block

function FindClosestPlayer()
    local closestPlayer
    local shortestDistance = math.huge

    for i, v in pairs(game.Players:GetPlayers()) do
        if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and
            v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") then
            local pos = Camera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
            local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude
            if magnitude < shortestDistance then
                closestPlayer = v
                shortestDistance = magnitude
            end
        end
    end
    return closestPlayer
end

Tool.Activated:Connect(function()

    if Enabled == true then
        Enabled = false
        if Notifications == true then

            Plr = FindClosestPlayer()
            TargetPlayer = tostring(Plr)
            game.StarterGui:SetCore("SendNotification", {
                Title = "io",
                Text = ""
            })
        end

    else
        Plr = FindClosestPlayer()
        TargetPlayer = tostring(Plr)

        Enabled = true

        if Notifications == true then

            Plr = FindClosestPlayer()
            TargetPlayer = tostring(Plr)
            game.StarterGui:SetCore("SendNotification", {
                Title = "io",
                Text = "" .. tostring(TargetPlayer)
            })
        end
    end
end)

game:GetService("RunService").Stepped:Connect(function()
    if Enabled == true then

        Part.Position = game.Players[TargetPlayer].Character.HumanoidRootPart.Position
    else
        Part.CFrame = CFrame.new(0, -9999, 0)

    end
end)

local mt = getrawmetatable(game)
local old = mt.__namecall
setreadonly(mt, false)
mt.__namecall = newcclosure(function(...)
    local args = { ... }

    if Enabled and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" then
        args[3] = game.Players[TargetPlayer].Character[AimPart].Position +

            (game.Players[TargetPlayer].Character[AimPart].Velocity * Prediction)

        return old(unpack(args))
    end
    return old(...)
end)

Tool.Parent = game.Players.LocalPlayer.Backpack
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]
